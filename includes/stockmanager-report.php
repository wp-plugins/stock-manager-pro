<?php
//	Function to build the actual stock reportfunction build_stock_report() {
	global $woocommerce, $wpdb, $product, $pagenow;
	//Get simple/downloadable/virtual products stock. Grouped don't have stock. Variations need a separate query	$args = array(		'post_type'			=> 'product',		'post_status' 		=> 'publish',		'posts_per_page' 	=> -1,		'meta_query' => array(			array(				'key' 		=> '_manage_stock',				'value' 	=> 'yes'			),		),		'tax_query' => array(			array(				'taxonomy' 	=> 'product_type',				'field' 	=> 'name',				'terms' 	=> array('simple'),				'operator' 	=> 'IN'			)		),		'fields' => 'id=>parent'	);	$stock_products = (array) get_posts($args);
	// Get product variations stock	$args = array(		'post_type'			=> 'product_variation',		'post_status' 		=> 'publish',		'posts_per_page' 	=> -1,		'meta_query' => array(			array(				'key' 		=> '_stock',				'value' 	=> array( '', false, null ),				'compare' 	=> 'NOT IN'			)		),		'fields' => 'id=>parent'	);
	$stock_variations = (array) get_posts($args);
	// Get variable products stock (where stock is set for the parent)	$args = array(		'post_type'			=> array('product'),		'post_status' 		=> 'publish',		'posts_per_page' 	=> -1,		'meta_query' => array(			'relation' => 'AND',			array(				'key' 		=> '_manage_stock',				'value' 	=> 'yes'			),		),		'tax_query' => array(			array(				'taxonomy' 	=> 'product_type',				'field' 	=> 'name',				'terms' 	=> array('variable'),				'operator' 	=> 'IN'			)		),		'fields' => 'id=>parent'	);
	$stock_variable_products = (array) get_posts($args);
	// Merge results	$in_stock = apply_filters( 'woocommerce_reports_stock_overview_products', $stock_products + $stock_variations + $stock_variable_products );	?>
	<script type="text/javascript" charset="utf-8">		jQuery(document).ready(function ($) {			$('#stock-report').dataTable( {				"oLanguage": {					"sLengthMenu": <?php echo '"' . __( 'Display', 'stockmanager') . ' _MENU_ ' . __('records per page', 'stockmanager') . '"'; ?>,					"sZeroRecords": <?php echo '"' . __( 'Nothing found - sorry', 'stockmanager' ) . '"'; ?>,					"sInfo": <?php echo'"'.__( 'Showing', 'stockmanager' ) . ' _START_ ' . __( 'to', 'stockmanager' ) . ' _END_ ' . __( 'of', 'stockmanager' ) . ' _TOTAL_ ' . __( 'records', 'stockmanager' ) .'"'; ?>,					"sInfoFiltered": <?php echo'"'.__( 'filtered from', 'stockmanager' ) . ' _MAX_ ' . __( 'total records', 'stockmanager' ).'"'; ?>,					"sSearch": <?php echo'"'.__( 'Apply filter', 'stockmanager' ) . ' _INPUT_ ' . __( 'to table', 'stockmanager' ).'"'; ?>				},				"bPaginate": true,				<?php				$options = get_option( 'plugin_options_smp' );				$display = $options[ 'dropdown_3' ];				echo '"iDisplayLength": ' . (int)$display . ','				?>			} );		} );	</script>
	<div id="poststuff" class="woocommerce-reports-wrap halved">		<div class="woocommerce-reports-left">			<div class="postbox">				<h3><span><?php _e( 'Stock report', 'stockmanager' ); ?></span></h3>				<div class="inside">					<?php					if ( $in_stock ) {						$options = get_option( 'plugin_options_smp' );						if ( $options[ 'radio_buttons_1' ] == "No" ) {							$do_variations = false;						} else {							$do_variations = true;						}						if ( $options[ 'radio_buttons_2' ] == "No" ) {							$do_colors = false;						} else {							$do_colors = true;						}						$no_stock = get_option( 'woocommerce_notify_no_stock_amount' );						$low_stock = get_option( 'woocommerce_notify_low_stock_amount' );						$cols = array();						$col_vals = array();						$cols_code = array();						$col_vals_code = array();						echo '<form method="post" >';						echo '<table id="stock-report" class="stock-report">';							echo '<thead>';								echo '<tr>';									echo '<th>' . __( 'Description', 'stockmanager' ) . '</th>';
									// If do_variations is true then first find out all variations									if ( $do_variations ) {										foreach ( $in_stock as $product_id => $parent ) {											$product = get_product( $product_id );
											if ( $product->product_type == 'variation' ) {												$attributes = $product->get_attributes();												foreach ( $attributes as $label => $attribute ) {												//	$tmp = $woocommerce->attribute_label( $attribute[ 'name' ] );													$tmp = wc_attribute_label($attribute[ 'name' ]); 													if ( ! ( in_array( $tmp, $cols ) ) ) {														$cols[] = $tmp;													}													if ( ! ( in_array( $label, $cols_code ) ) ) {														$cols_code[] = $label;													}												}											}										}										foreach ( $cols as $val ) {											echo '<th>' . $val . '</th>';										}									}									// End variations part									echo '<th>' . __( 'Stock', 'stockmanager' ) . '</th>';									echo '<th>' . __( 'Mutations', 'stockmanager' ) . '</th>';									echo '<th>' . __( 'SKU', 'stockmanager' ) . '</th>';								echo '</tr>';							echo '</thead>';							echo '<tbody>';								foreach ( $in_stock as $product_id => $parent ) {									$stock = (int) get_post_meta( $product_id, '_stock', true );									$sku = get_post_meta( $product_id, '_sku', true );									$title = esc_html__( get_the_title( $product_id ) );									//get product variation attributes to display either in title, or in columns									$product = get_product( $product_id );									$title = $product->get_title();									if ( $product->product_type == 'variation' ) {										$attribs = $product->get_variation_attributes();										foreach ( $attribs as $label => $val ) {											if ( $do_variations ) {												$col_vals[] = $val;												$col_vals_code[] = $label;											} else {												$title = $title . ' ' . $val;											}										}									}									if ( get_post_type( $product_id ) == 'product' ) {										$product_url = admin_url( 'post.php?post=' . $product_id . '&action=edit' );									}else{										$product_url = admin_url( 'post.php?post=' . $parent . '&action=edit' );									}									if ( $do_colors ) {										if (( $stock == ( int )$no_stock ) || ( $stock <= 0 )) {											printf( '<tr class="stock-zero"><td><a href="%s" class="stock-zero">%s</a></td>', $product_url, $title );										} elseif ( $stock <= ( int )$low_stock ) {											printf( '<tr class="stock-low"><td><a href="%s" class="stock-low">%s</a></td>', $product_url, $title );										} else {											printf( '<tr><td><a href="%s">%s</a></td>', $product_url, $title );										}									} else {										printf( '<tr><td><a href="%s">%s</a></td>', $product_url, $title );									}									// Do variations means print the variation values in their columns									if ( $do_variations ) {										if ( is_array( $col_vals ) && ( ! ( empty( $col_vals ) ) ) ) { 											$x = 0;											$y = 0;											$found = 0;											foreach ( $cols as $value ) { 												foreach( $col_vals as $attribute ) {													if ( strpos( $col_vals_code[ $y ], $cols_code[ $x ] ) ) { 														printf( '<td> %s </td>', $attribute );														$found = 1;													}													$y++;												}												if ($found == 0) {													echo '<td> &nbsp; </td>';												} else {													$found = 0 ;												}												$y = 0;												$x++;											}										} else {											foreach( $cols as $value ) {												echo '<td> &nbsp; </td>';											}										}									}									// End variations									printf( '<td> %s </td><td><input type="text" class="mutation" name="%s"></td><td> %s </td></tr>', $stock, $product_id, $sku );									$col_vals = array();									$col_vals_code = array();								}							echo '</tbody>';						echo '</table>';					} else {						echo '<p>'.__( 'No products are defined.', 'woocommerce' ).'</p>';					}					echo '<br/><div class="comment">' . __( 'Comments (used in stock mutation report)', 'stockmanager') . ': ' . '<br/><input type="text" name="comment"></div>';					echo '<br/><input type="submit" class="button-primary" onclick="return confirm(\'' . __( 'Are you sure you want to process stock mutations?', 'stockmanager' ) . '\')" value="' . __( 'Submit', 'stockmanager' ) . '" name="go">';					echo '</form>';				?>				</div>			</div>		</div>	</div>	<?php}
// ### Functions to process the stock fluctuationsfunction process_stock_report(){
	global $wpdb;
	$table_name = $wpdb->prefix . "stockmanager";	$mutations = array();	$oldstock = array();	$comment = '';
	//walk through all fields and check if numeric. 	//If so, create the report, and process the fluctuation
	foreach ( $_POST as $key => $val ) {		$val = $_POST[ $key ];		if ( $key == 'comment' ) {			$comments = $val;		} elseif ( ( $key == 'stock-report_length' ) || ( $key == '' ) ) {			// skip		} elseif ( is_numeric( $val ) ) {			$product = get_product( $key );			$oldstock[$key] = (int) get_post_meta( $key, '_stock', true );			if ( $val == 0 ) {															// zero, skip			} elseif ( $val < 0 ) {				$tmp = $product->reduce_stock( abs( $val ) );	// negative, delete from stock				$mutations[ $key ] = $val;			} else {				$tmp = $product->increase_stock( $val );		// positive, add to stock				$mutations[ $key ] = $val;			}		}	}	if ( ! ( empty( $mutations ) ) ) {		if ( $comments == '' ) {			$comments = __( 'No comment entered', 'stockreport' );		}		$actual_mutations = $wpdb->insert( $table_name, array( 'time' => current_time('mysql'), 'comments' => $comments, 'mutations' => serialize( $mutations ), 'oldstock' => serialize($oldstock) ) );	}}?>